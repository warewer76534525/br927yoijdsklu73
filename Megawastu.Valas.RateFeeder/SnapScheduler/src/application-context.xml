<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans	
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/tx  
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
">
	<tx:annotation-driven />
	
	<context:component-scan base-package="com.mgwvalas.snap,com.mgwvalas.moneychanger" />
	
	<context:property-placeholder location="application.properties" />
	<context:annotation-config />
	<!-- Basic Configuration -->

	<!-- JMS Configuration -->
	<bean id="connectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
	    <property name="connectionFactory">
	      <bean class="org.apache.activemq.ActiveMQConnectionFactory">
	        <property name="brokerURL">
	          <value>${jms.brokerURL}</value>
	        </property>
	      </bean>
	    </property>
  	</bean>
	
	<bean id="cachedConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory"
    	p:targetConnectionFactory-ref="connectionFactory" p:sessionCacheSize="10" />
    	
	<bean id="ratesUpdatedListenerDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="${jms.ratesUpdate.topic}" />
	</bean>
	
	<jms:listener-container
      container-type="default"
      connection-factory="connectionFactory"
      acknowledge="auto"
      destination-type="topic">
    	<jms:listener destination="${jms.ratesUpdate.topic}" subscription="${jms.ratesUpdate.topic}" 
    	ref="rateUpdatedListener" method="onMessage" id="rateUpdatedSnapClient" />
  	</jms:listener-container>
  	
	<bean id="staleDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="${jms.stale.topic}" />
	</bean>
	
	<jms:listener-container
      container-type="default"
      connection-factory="connectionFactory"
      acknowledge="auto" destination-type="topic">
    	<jms:listener destination="${jms.stale.topic}" subscription="${jms.stale.topic}" ref="staleUpdatedListener" method="onMessage" id="snapStaleUpdatedClient" />
  	</jms:listener-container>
  
	<bean id="holidayDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="${jms.holiday.topic}" />
	</bean>
	
	<jms:listener-container
      container-type="default"
      connection-factory="connectionFactory"
      acknowledge="auto"
      destination-type="topic">
    	<jms:listener destination="${jms.holiday.topic}" subscription="${jms.holiday.topic}" 
    	ref="holidayListener" method="onMessage" id="snapHolidayListener" />
  	</jms:listener-container>
  	
	<!-- Fix rates publisher -->
 	
 	<bean id="fixRateListenerDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="${jms.fixRate.topic}" />
	</bean>
 	
	<bean id="snapJmsTemplate" class="org.springframework.jms.core.JmsTemplate" scope="prototype">
		<property name="connectionFactory" ref="cachedConnectionFactory" />
		<property name="receiveTimeout" value="10000" />
		<property name="defaultDestination" ref="fixRateListenerDestination"></property>
		<property name="messageConverter" ref="serializableMessageConverter"></property>
	</bean>
	

	<!-- Scheduler Config -->
	<bean name="snapGeneratorJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass"
			value="com.mgwvalas.snap.scheduler.SnapGeneratorJob" />
		<property name="jobDataAsMap">
			<map>
				<entry key="snapService" value-ref="snapService" />
				<entry key="snapUpdatedPublisher" value-ref="snapUpdatedPublisher" />
			</map>
		</property>
	</bean>

	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="snapGeneratorJob" />
		<property name="repeatInterval" value="${quartz.snap.interval}" />
		<property name="startDelay" value="1000" />
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobDetails">
			<list>
				<ref bean="snapGeneratorJob" />
			</list>
		</property>
		<property name="triggers">
			<list>
				<ref bean="simpleTrigger" />
			</list>
		</property>
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">20</prop>
				<prop key="org.quartz.threadPool.threadPriority">5</prop>
			</props>
		</property>
	</bean>
	
	<!-- JDBC -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">

		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="10" />
		<property name="maxActive" value="5" />
		<property name="maxWait" value="5000" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		autowire="byType" />
</beans>
